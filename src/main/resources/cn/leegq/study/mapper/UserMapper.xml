<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org// DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.leegq.study.mapper.UserMapper">
    <resultMap id="userMap" type="cn.leegq.study.model.SysUser">
        <!--<id property="id" column="id"/>-->
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="userRoleMap" extends="userMap" type="cn.leegq.study.model.SysUser">
        <result property="role.id" column="role_id"></result>
        <result property="role.roleName" column="role_name"></result>
        <result property="role.enabled" column="enabled"></result>
        <result property="role.createBy" column="create_by"></result>
        <result property="role.createTime" column="role_create_time" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <resultMap id="userRoleMap2" extends="userMap" type="cn.leegq.study.model.SysUser">
        <association property="role" columnPrefix="role_" javaType="cn.leegq.study.model.SysRole">
            <result property="id" column="id"></result>
            <result property="roleName" column="role_name"></result>
            <result property="enabled" column="enabled"></result>
            <result property="createBy" column="create_by"></result>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"></result>
        </association>
    </resultMap>

    <resultMap id="userRoleMap3" extends="userMap" type="cn.leegq.study.model.SysUser">
        <association property="role" columnPrefix="role_" resultMap="cn.leegq.study.mapper.RoleMapper.roleMap">
        </association>
    </resultMap>

    <resultMap id="userRoleMapSelect" extends="userMap" type="cn.leegq.study.model.SysUser" >
    </resultMap>


    <resultMap id="userRoleMapSelect2" extends="userMap" type="cn.leegq.study.model.SysUser">
        <association fetchType="lazy" property="role" column="{id=role_id}" select="cn.leegq.study.mapper.RoleMapper.selectRoleById"></association>
    </resultMap>

    <resultMap id="userRoleListMap" extends="userMap" type="cn.leegq.study.model.SysUser">
        <collection property="roleList" columnPrefix="role_" resultMap="cn.leegq.study.mapper.RoleMapper.roleMap"></collection>
    </resultMap>

    <resultMap id="userRoleListMap2" extends="userMap" type="cn.leegq.study.model.SysUser">
        <collection property="roleList" columnPrefix="role_" resultMap="cn.leegq.study.mapper.RoleMapper.rolePrivilegeListMap"></collection>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        select  * from sys_user where id=#{id}
    </select>

    <select id="selectAll" resultType="cn.leegq.study.model.SysUser">
        select id,user_name userName,
         user_password userPassword,
         user_email userEmail,
         user_info userInfo,
         head_img headImg,
         create_time createTime
        from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="cn.leegq.study.model.SysRole">
        select r.id,r.role_name roleName,r.enabled,r.create_by createBy, r.create_time createTime
        from sys_user u ,sys_user_role ur ,sys_role r
        where u.id=ur.user_id and ur.role_id=r.id and u.id=#{userId}

    </select>

    <select id="selectRolesByUserId2" resultType="cn.leegq.study.model.SysRole">
        select r.id,r.role_name roleName,r.enabled,r.create_by createBy, r.create_time createTime,u.user_name as "user.userName"
        from sys_user u ,sys_user_role ur ,sys_role r
        where u.id=ur.user_id and ur.role_id=r.id and u.id=#{userId}

    </select>

    <insert id="insert">
        insert into sys_user(id,user_name,user_password,user_email,user_info,head_img,create_time)
        values(
          #{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(id,user_name,user_password,user_email,user_info,head_img,create_time)
        values(
        #{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insert3">
        <selectKey keyColumn="id" keyProperty="id" resultType="long" order="AFTER">
          select LAST_INSERT_ID()
        </selectKey>
        insert into sys_user(id,user_name,user_password,user_email,user_info,head_img,create_time)
        values(
        #{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updateById">
        update sys_user set user_name=#{userName},user_password=#{userPassword},
        user_email=#{userEmail},user_info=#{userInfo},head_img=#{headImg,jdbcType=BLOB},create_time=#{createTime,jdbcType=TIMESTAMP}
        where id=#{id}
    </update>
    <delete id="deleteById">
        delete from sys_user where id=#{id}
    </delete>

    <select id="selectRoleByUserIdAndRoleEnabled" resultType="cn.leegq.study.model.SysRole">
        select r.id,r.role_name as roleName,r.enabled,r.create_by createBy,r.create_time  createTime
        from sys_user u ,sys_user_role ur, sys_role r
        where u.id=ur.user_id and ur.role_id=r.id
        and u.id=#{0} and r.enabled=#{1}
    </select>


    <select id="selectRoleByUserIdAndRoleEnabled2" resultType="cn.leegq.study.model.SysRole">
        select r.id,r.role_name as roleName,r.enabled,r.create_by createBy,r.create_time  createTime
        from sys_user u ,sys_user_role ur, sys_role r
        where u.id=ur.user_id and ur.role_id=r.id
        and u.id=#{userId} and r.enabled=#{enabled}
    </select>

    <select id="selectRoleByUserIdAndRoleEnabled3" resultType="cn.leegq.study.model.SysRole">
        select r.id,r.role_name as roleName,r.enabled,r.create_by createBy,r.create_time  createTime
        from sys_user u ,sys_user_role ur, sys_role r
        where u.id=ur.user_id and ur.role_id=r.id
        and u.id=#{user.id} and r.enabled=#{role.enabled}
    </select>

    <select id="selectRoleByUserIdAndRoleEnabled4" resultType="cn.leegq.study.model.SysRole">
        select r.id,r.role_name as roleName,r.enabled,r.create_by createBy,r.create_time  createTime
        from sys_user u ,sys_user_role ur, sys_role r
        where u.id=ur.user_id and ur.role_id=r.id
        and u.id=#{id} and r.enabled=#{enabled}
    </select>

    <select id="selectByUser" resultType="cn.leegq.study.model.SysUser">
        select id,user_name userName,
         user_password userPassword,
         user_email userEmail,
         user_info userInfo,
         head_img headImg,
         create_time createTime
        from sys_user
        where 1=1
        <if test="userName !=null and userName != ''">
            and user_name like concat('%',#{userName},'%')
        </if>
        <if test="userEmail !=null and userEmail != ''">
            and user_email = #{userEmail}
        </if>
    </select>

    <update id="updateByIdSelective">
        update sys_user
        set
          <if test="userName !=null and userName !=''">
              user_name=#{userName},
          </if>
          <if test="userPassword !=null and userPassword !=''">
              user_password=#{userPassword},
          </if>
          <if test="createTime !=null ">
              create_time=#{createTime,jdbcType=TIMESTAMP},
          </if>
          id=#{id}
        where id=#{id}
    </update>

    <update id="updateByIdSelective2">
        update sys_user
        <set>
            <if test="userName !=null and userName !=''">
                user_name=#{userName},
            </if>
            <if test="userPassword !=null and userPassword !=''">
                user_password=#{userPassword},
            </if>
        </set>
        where id=#{id}
    </update>

    <select id="selectByIdOrUserName" resultType="cn.leegq.study.model.SysUser">
        select id,user_name userName,
         user_password userPassword,
         user_email userEmail,
         user_info userInfo,
         head_img headImg,
         create_time createTime
        from sys_user
        where 1=1
        <choose>
            <when test=" id !=null">
                and id=#{id}
            </when>
            <when test="userName !=null and userName !=''">
                and user_name=#{userName}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
    </select>

    <select id="selectByUser2" resultType="cn.leegq.study.model.SysUser">
        select id,user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
        <where>
            <if test="userName !=null and userName != ''">
                and user_name like concat('%',#{userName},'%')
            </if>
            <if test="userEmail !=null and userEmail != ''">
                and user_email = #{userEmail}
            </if>
        </where>
    </select>

    <select id="selectByIdList" resultType="cn.leegq.study.model.SysUser">
        select id,user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
        where id  IN
        <foreach collection="ids" open="(" close=")" separator="," index="i" item="id">
            #{id}
        </foreach>
    </select>

    <select id="selectByIdList2" resultType="cn.leegq.study.model.SysUser">
        select id,user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
        where id  IN
        <foreach collection="ids" open="(" close=")" separator="," index="i" item="id">
            #{id}
        </foreach>
    </select>
    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name,user_password,user_email,user_info,head_img,create_time)
        VALUES
        <foreach collection="list" item="user" separator=",">
            (
              #{user.userName},#{user.userPassword},#{user.userEmail},#{user.userInfo},
            #{user.headImg,jdbcType=BLOB},#{user.createTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <update id="updateByMap">
        update sys_user
        SET
        <foreach collection="_parameter" index="key" item="val" separator=",">
            #{key}=#{val}
        </foreach>
        where id=#{id}
    </update>

    <select id="selectUserAndRoleById" resultType="cn.leegq.study.model.SysUser">
        select u.id,u.user_name userName,u.user_password userPassword, u.user_info userInfo,
        u.head_img headImg,u.create_time createTime, r.id "role.id",r.role_name "role.roleName",
        r.enabled "role.enabled",r.create_by "r.createBy",r.create_time "role.createTime"
        from sys_user u,sys_user_role ur ,sys_role r
        where u.id=ur.user_id and ur.role_id=r.id and u.id=#{id}
    </select>

    <select id="selectUserAndRoleById2" resultMap="userRoleMap">
        select u.id,u.user_name ,u.user_password , u.user_info ,
        u.head_img ,u.create_time , r.id "role_id",r.role_name "role_name",
        r.enabled ,r.create_by,r.create_time "role_create_time"
        from sys_user u,sys_user_role ur ,sys_role r
        where u.id=ur.user_id and ur.role_id=r.id and u.id=#{id}
    </select>

    <select id="selectUserAndRoleById3" resultMap="userRoleMap2">
        select u.id,u.user_name ,u.user_password , u.user_info ,
        u.head_img ,u.create_time , r.id role_id,r.role_name role_role_name,
        r.enabled role_enabled,r.create_by role_create_by,r.create_time role_create_time
        from sys_user u,sys_user_role ur ,sys_role r
        where u.id=ur.user_id and ur.role_id=r.id and u.id=#{id}
    </select>


    <select id="selectUserAndRoleById4" resultMap="userRoleMap3">
        select u.id,u.user_name ,u.user_password , u.user_info ,
        u.head_img ,u.create_time , r.id role_id,r.role_name role_role_name,
        r.enabled role_enabled,r.create_by role_create_by,r.create_time role_create_time
        from sys_user u,sys_user_role ur ,sys_role r
        where u.id=ur.user_id and ur.role_id=r.id and u.id=#{id}
    </select>


    <select id="selectUserAndRoleById5" resultMap="userRoleMapSelect">
        select u.id,u.user_name ,u.user_password , u.user_info ,
        u.head_img ,u.create_time , ur.role_id
        from sys_user u,sys_user_role ur
        where u.id=ur.user_id  and u.id=#{id}
    </select>

    <select id="selectUserAndRoleById6" resultMap="userRoleMapSelect2">
        select u.id,u.user_name ,u.user_password , u.user_info ,
        u.head_img ,u.create_time , ur.role_id
        from sys_user u,sys_user_role ur
        where u.id=ur.user_id  and u.id=#{id}
    </select>
    
    <select id="selectAllUserAndRoles" resultMap="userRoleListMap">
        select u.id,u.user_name ,u.user_password , u.user_info ,
            u.head_img ,u.create_time , r.id role_id,r.role_name role_role_name,
                                        r.enabled role_enabled,r.create_by role_create_by,r.create_time role_create_time
        from sys_user u,sys_user_role ur ,sys_role r
        where u.id=ur.user_id and ur.role_id=r.id
    </select>

    <select id="selectAllUserAndRoles2" resultMap="userRoleListMap2">
        select u.id,u.user_name ,u.user_password , u.user_info ,
        u.head_img ,u.create_time , r.id role_id,r.role_name role_role_name,
        r.enabled role_enabled,r.create_by role_create_by,r.create_time role_create_time,
        p.id role_privilege_id,p.privilege_name role_privilege_privilege_name,p.privilege_url role_privilege_privilege_url
        from sys_user u,sys_user_role ur ,sys_role r,sys_role_privilege rp ,sys_privilege p
        where u.id=ur.user_id and ur.role_id=r.id and r.id=rp.role_id and p.id=rp.privilege_id
    </select>
</mapper>